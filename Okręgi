#include <stdio.h>
#include <math.h>

float ws(int a1, int a2, int b1, int b2, int r1, int r2); //obliczanie wspolrzednych
float pp(int a1, int a2, int b1, int b2, int r1, int r2); //punkty przecięcia
float po(int a1, int a2, int b1, int b2, int r1, int r2); //polozenie okregow

int main()
{
    int a1,a2,b1,b2,r1,r2,z;
    printf("Podaj wspolrzedne srodka okregow oraz ich promien\n");

   /* int ilosc, tab[ilosc][3];
    printf("Podaj ilosc okregow, dla ktorych chcesz wykonac obliczenia (min 2), a potem podaj wspolrzedne srodka okręgow oraz ich promien\n");
    scanf("%d",&ilosc);
    ilosc=2;
    int i=1;
    for (i;i<=ilosc;i++)
    {
        printf("Okrag %d:\n",i);
        printf("Podaj x:");
        scanf("%d",&);
        printf("Podaj y:");
        scanf("%d",&);
        printf("Podaj promien:");
        scanf("%d",&);
   }
*/

    printf("Okrag 1:\n");
    printf("Podaj a:");
    scanf("%d",&a1);
    printf("Podaj b:");
    scanf("%d",&b1);
    printf("Podaj promien:");
    scanf("%d",&r1);

    printf("Okrag 2:\n");
    printf("Podaj a:");
    scanf("%d",&a2);
    printf("Podaj b:");
    scanf("%d",&b2);
    printf("Podaj promien:");
    scanf("%d",&r2);
    z=ws(a1, a2, b1, b2, r1, r2);
    if (z==0)
        po(a1, a2, b1, b2, r1, r2);
    return 0;
}

float ws(int a1, int a2, int b1, int b2, int r1, int r2) //obliczanie wspolrzednych
{
        if (a1 == a2)
            if (b1 == b2)
            {
                 if (r1==r2)
                 {
                     printf("Okregi sa takie same.\n");
                     return 1;
                 }

                 else
                 {
                     printf("Srodek okregow jest taki sam.\n");
                     return 1;
                 }
            }
    return 0;
}

float po(int a1, int a2, int b1, int b2, int r1, int r2) //polozenie okregow
{
    if (r1+r2==sqrt(((a1 + a2) * (a1 + a2)) + ((b1 + b2) * (b1 + b2))))
    {
        printf("Okregi sa zewnetrznie styczne.\n");    pp(a1, a2, b1, b2, r1, r2);
    }
    if (r1+r2>sqrt(((a1 + a2) * (a1 + a2)) + ((b1 + b2) * (b1 + b2))))
        printf("Okregi sa wewnatrz siebie.\n");
    if (r1+r2<sqrt(((a1 + a2) * (a1 + a2)) + ((b1 + b2) * (b1 + b2))))
        printf("Okregi sa nazewnatrz siebie.\n");
    else
    {
        if (r1>r2)
        {
            int r;
            r=r1-r2;
            if (r<sqrt(((a1 + a2) * (a1 + a2)) + ((b1 + b2) * (b1 + b2)) < r1 + r2))
            {
                printf("Okregi przecinaja sie w dwoch punktach.\n");    pp(a1, a2, b1, b2, r1, r2);
            }
            if (r==sqrt(((a1 + a2) * (a1 + a2)) + ((b1 + b2) * (b1 + b2))))
                printf("Okregi sa wewnętrznie styczne.\n");    pp(a1, a2, b1, b2, r1, r2);
        }
        else
        {
            int r;
            r=r2-r1;
            if (r<sqrt(((a1 + a2) * (a1 + a2)) + ((b1 + b2) * (b1 + b2)) < r1 + r2))
            {
                printf("Okregi przecinaja sie w dwoch punktach.\n");    pp(a1, a2, b1, b2, r1, r2);
            }
            if (r==sqrt(((a1 + a2) * (a1 + a2)) + ((b1 + b2) * (b1 + b2))))
            {
                printf("Okregi sa wewnętrznie styczne.\n");    pp(a1, a2, b1, b2, r1, r2);
            }
        }
    }


    return 0;
}

float pp(int a1, int a2, int b1, int b2, int r1, int r2) //punkty przecięcia
{
    //wszystkie obliczenia zostaly wyznaczone z rownania okregu i przyrownania ich do siebie dla dwoch okregow
    int a,b,c,x,x1,x2,y,y1,y2,z1,z2,Delta;

    z1=(-2*(a1-a2)); //liczba pomocnicza 1
    z2=(r1*r1-r2*r2-a1*a1-b1*b1+a2*a2+b2*b2); //liczba pomocnicza 2

    a=(((4*(b1-b2)*(b1-b2))/(z1*z1))+1);
    b=(((4*(b1-b2)*z2)/(z1*z1))-2*b1-4*(a1/z1)*(b1-b2));
    c=((z2*z2)/(z1*z1)-((2*a1*z2)/z1)+a1*a1+b1-r1*r1);

    Delta=b*b-4*a*c;
    if (Delta==0)
    {
        y=((-b)/(2*a));
        x=(z2+2*y*(b1-b2))/z1;
        printf("Okregi przecinaja sie w punktcie (%d,%d)\n",x,y);
    }
    y1=((-b-sqrt(Delta)/(2*a)));
    y2=((-b+sqrt(Delta)/(2*a)));
    x1=(z2+2*y1*(b1-b2))/z1;
    x2=(z2+2*y2*(b1-b2))/z1;

    printf("Okregi przecinaja sie w punktach (%d,%d) oraz (%d,%d)\n",x1,y1,x2,y2);
    return 0;
}
